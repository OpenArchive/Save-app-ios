default_platform :ios

platform :ios do
#  before_all do
#    setup_circle_ci
#    cocoapods
#  end

  desc "Run unit tests"
  lane :test do
    scan
  end

  desc "Build for local testing"
  lane :local do
    app_store_connect_api_key
    sync_code_signing
    increment_build_number_in_xcodeproj(
        scheme: "save-release"
    )
    build_ios_app(
      scheme: "save-release",
      export_options: {
        provisioningProfiles: {
          "org.open-archive.save" => "match AppStore org.open-archive.save",
          "org.open-archive.save.extension" => "match AppStore org.open-archive.save.extension",
        }
      }
    )
  end

  desc "Prepare the app for dev or build"
  lane :prepare do
    produce(
        app_identifier: "org.open-archive.save",
        app_name: "Save",
        skip_itc: true
    )
    match(
        app_identifier: ["org.open-archive.save"],
        type: "appstore",
    )
    match(
        app_identifier: ["org.open-archive.save",
"org.open-archive.save.extension"],
        type: "appstore",
		clone_branch_directly: true
    )
  end

  desc "Build and upload to TestFlight for internal testing"
  lane :tf do
    app_store_connect_api_key
    sync_code_signing
    increment_build_number_in_xcodeproj(
        scheme: "save-release"
    )
    build_ios_app(
      scheme: "save-release",
      export_options: {
        provisioningProfiles: {
          "org.open-archive.save" => "match AppStore org.open-archive.save",
          "org.open-archive.save.extension" => "match AppStore org.open-archive.save.extension",
        }
      }
    )
    add_git_tag
    push_to_git_remote
    upload_to_testflight(
      groups: "Beta Group",
	  distribute_external: true,
	  notify_external_testers: true,
      expire_previous_builds: true,
      changelog: prompt(text: "Changelog: ")
)
    # upload_symbols_to_crashlytics
  end

  desc "Build and upload to TestFlight for internal and external testing"
  lane :beta do
    app_store_connect_api_key
    sync_code_signing
    increment_build_number_in_xcodeproj
    build_ios_app
    add_git_tag
    push_to_git_remote
    upload_to_testflight(
        distribute_external: true,
        groups: "Beta Testers",
        submit_beta_review: true
    )
    # upload_symbols_to_crashlytics
  end

  desc "Build and upload to the App Store"
  lane :release do
    # ensure_no_debug_code(text: "FIXME")
    app_store_connect_api_key
    sync_code_signing
    increment_build_number_in_xcodeproj(
        scheme: "save-release"
    )
    build_ios_app(
      scheme: "save-release",
      export_options: {
        provisioningProfiles: {
          "org.open-archive.save" => "match AppStore org.open-archive.save",
          "org.open-archive.save.extension" => "match AppStore org.open-archive.save.extension",
        }
      }
    )
    add_git_tag
    push_to_git_remote
    upload_to_app_store(
      precheck_include_in_app_purchases: false
    )
    # upload_symbols_to_crashlytics
  end
end
